#include <bluetoothTransferReply.h>

//--------------------------------------------------------------------------------------------------
//	abort () []
//--------------------------------------------------------------------------------------------------
void BluetoothTransferReply::abort()
{
	m_abort.store(true);
}

//--------------------------------------------------------------------------------------------------
//	error () []
//--------------------------------------------------------------------------------------------------
BluetoothTransferReply::TransferError BluetoothTransferReply::error() const
{
	return m_error;
}

//--------------------------------------------------------------------------------------------------
//	BluetoothTransferReply () []
//--------------------------------------------------------------------------------------------------
BluetoothTransferReply::BluetoothTransferReply(QObject* parent /*= nullptr*/)
	: QObject(parent)
{

}

//--------------------------------------------------------------------------------------------------
//	setManager () []
//--------------------------------------------------------------------------------------------------
void BluetoothTransferReply::setManager(BluetoothTransferManager* manager)
{
	m_manager = manager;
}

//--------------------------------------------------------------------------------------------------
//	setRequest () []
//--------------------------------------------------------------------------------------------------
void BluetoothTransferReply::setRequest(const BluetoothTransferRequest& request)
{
	m_request = request;
}

//--------------------------------------------------------------------------------------------------
//	errorString () []
//--------------------------------------------------------------------------------------------------
QString BluetoothTransferReply::errorString() const
{
	return m_errorString;
}

//--------------------------------------------------------------------------------------------------
//	isFinished () []
//--------------------------------------------------------------------------------------------------
bool BluetoothTransferReply::isFinished() const
{
	return m_finished;
}

//--------------------------------------------------------------------------------------------------
//	isRunning () []
//--------------------------------------------------------------------------------------------------
bool BluetoothTransferReply::isRunning() const
{
	return !isFinished();
}

//--------------------------------------------------------------------------------------------------
//	manager () []
//--------------------------------------------------------------------------------------------------
BluetoothTransferManager* BluetoothTransferReply::manager() const
{
	return m_manager;
}

//--------------------------------------------------------------------------------------------------
//	request () []
//--------------------------------------------------------------------------------------------------
BluetoothTransferRequest BluetoothTransferReply::request() const
{
	return m_request;
}

